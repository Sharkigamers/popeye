version: '3'
services:

  poll:
    restart: always
    build:
      context: ./poll
      dockerfile: Dockerfile
    environment:
      - FLASK_ENV=developpement
      - FLASK_APP=app.py
      - FLASK_RUN_HOST=0.0.0.0
      - FLASK_RUN_PORT=80
      - CONNECT_ENV=redis
    ports:
      - "5000:80"
    depends_on:
      - redis
    networks:
      - poll-tier

  redis:
    restart: always
    image: "redis:latest"
    ports:
      - "6379:6379"
    networks:
      - poll-tier
      - back-tier

  worker:
    restart: always
    build:
      context: ./worker
      dockerfile: Dockerfile
    environment:
      - FLASK_ENV=developpement
      - NODE_ENV=developpement
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - REDIS_HOST=redis
      - DB_HOST=db
    depends_on:
      - redis
      - db
    networks:
      - back-tier

  db:
    restart: always
    image: "postgres:latest"
    volumes:
      - ./schema.sql:/docker-entrypoint-initdb.d/init.sql
      - ./db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    networks:
      - result-tier
      - back-tier

  result:
    restart: always
    build:
      context: ./result
      dockerfile: Dockerfile
    ports:
      - "5001:80"
    depends_on:
      - db
    networks:
      - result-tier
    environment:
      - RESULT_LINK=db
      - RESULT_PORT=80

networks:
  poll-tier:
  result-tier:
  back-tier:

volumes:
  db-data:
